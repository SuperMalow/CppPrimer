/*
    在纸上写一个1-10000之间的整数，程序运行后，计算机给出猜测，通过键盘输入>或<或=告知计算机猜测的结果是偏小还是偏大还是正确，然后计算机再次猜测，直到计算机猜测正确，提示总共的猜测次数并结束程序。作业采用word文档书写（格式见附件）。要求提供源代码（含必要的注释），程序运行的视频（含同步的语音解释，测试不少于3个数字）。
*/

#include <iostream>
using namespace std;

int main()
{
    while(true)
    {
        // 定义猜的次数
        int cnt = 1;

        // 先输出一个
        cout << "我猜的数字是: " << 5000 << endl;
        
        // 人输入进行判断 并把输入的字符存到c中
        char c;
        cin >> c;

        // 如果人想的那个数小于计算机猜的数
        if (c == '<')
        {
            // 从1到5000二分 l跟r为两个边界
            int l = 1, r = 5000;

            // 让数据范围在l,r中(也就是让人写下的数要求在l,r不能越界,越界就没这个算法的事情了)
            while (l < r)
            {
                // 右移运算符优先级比+高
                // l + r >> 1 等同于 (l + r) / 2
                // 把l, r这个区间进行取中值存到mid
                int mid = l + r >> 1;

                // 先输出一遍
                cout << "我猜的数字是: " << mid << endl;

                // 再进行读取字符
                cin >> c;

                // 每次读取字符cnt计算机猜测次数就要++
                cnt ++;

                // 进行对c判断
                // 如果人写下的数依然<计算机的数(就是上面的mid不为人写下的数)
                // 此时人写下的数据范围应该在1(1也就是上面定义的l) ~ mid
                if (c == '<') r = mid; // 所以要进行对数据范围的更新l,r(r这个边界更新为mid,l一开始定义为1了,不用变)

                // 如果人写下的数>计算机的数
                // 此时人写下的数据范围应该在mid+1 ~ 5000(也就是r)
                // 为什么是mid + 1不是mid 上面<的情况已经包括mid了
                else if (c == '>') l = mid + 1; // 对数据范围的更新

                // 如果人写下的数=计算机的数
                // 此时就是猜对了 输出内容即可
                // 因为二分分到最后就是两个相同的数l跟r相同,所以输出l跟r是一样的效果
                else if (c == '=')
                {
                    cout << "我猜的数字是: " << l << " 我猜对了！" << endl;
                    cout << "我一共猜了: "   << cnt << " 次" << endl;
                    return 0; // 直接让程序结束
                }
            }
        }

        // 如果人写下的那个数字大于计算机猜的数
        else if(c == '>')
        {
            // 从5000到10000二分 l r为两个边界
            int l = 5000, r = 10000;

            // 让数据范围在l,r中(也就是让人写下的数要求在l,r不能越界,越界就没这个算法的事情了)
            while (l < r)
            {
                // 右移运算符优先级比+高
                // l + r >> 1 等同于 (l + r) / 2
                // 把l, r这个区间进行取中值存到mid
                // 这里的mid=l+r + 1 >> 1 为什么要加1 因为这里的范围是5000~10000
                // 5000这个数值上面那种情况已经包含了,这里不进行加1,让l=5001,也是一样的
                int mid = l + r + 1 >> 1;

                // 先输出一遍
                cout << "我猜的数字是: " << mid << endl;

                // 再进行读取字符
                cin >> c;

                // 每次读取字符cnt计算机猜测次数就要++
                cnt ++;

                // 进行对c判断
                // 如果人写下的数依然>计算机的数(就是上面的mid不为人写下的数)
                // 此时人写下的数据范围应该在mid ~ 10000
                if (c == '>') l = mid; // 对数据范围的更新

                // 如果人写下的数<计算机的数
                // 此时人写下的数据范围应该在l ~ mid
                // 为什么是mid - 1不是mid 上面>的情况已经包括mid了
                else if (c == '<') r = mid - 1; // 对数据范围的更新

                // 如果人写下的数=计算机的数
                // 此时就是猜对了 输出内容即可
                // 因为二分分到最后就是两个相同的数l跟r相同,所以输出l跟r是一样的效果
                else if (c == '=')
                {
                    cout << "我猜的数字是: " << l << " 我猜对了！" << endl;
                    cout << "我一共猜了: "   << cnt << " 次" << endl;
                    return 0;  // 直接让程序结束
                }
            }
        }

        // 这是特殊情况 如果一开始输出的5000为人写下的数字则直接输出内容
        // 为了加以限制为了避免跟上面c=='='的代码冲突,还限定了cnt == 1才输出
        // 也就是当猜测次数为1的时候且输出的数字为相等的时候输出内容
        else if(c == '=' && cnt == 1)
        {
            cout << "我猜的数字是: " << 5000 << " 我猜对了！" << endl;
            cout << "我一共猜了: "   << cnt << " 次" << endl;
            return 0; // 直接让程序结束
        }
    }
}